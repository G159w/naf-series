generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String()
  access_token      String? @db.String()
  expires_at        Int?
  expires_in        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String()
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Personality {
  id      String  @id @default(cuid())
  name    String  @unique
  imgUrl  String?
  created Video[] @relation("createdVideos")
  starred Video[] @relation("starredVideos")
}

enum VideoType {
  Movie
  Series
}

model Video {
  id          String        @id @default(cuid())
  imageUrl    String?
  title       String
  type        VideoType
  year        Int
  usersRating Float?
  genres      String[]
  storyline   String?
  desc        String?
  creators    Personality[] @relation("createdVideos")
  stars       Personality[] @relation("starredVideos")
  updatedAt   DateTime      @updatedAt

  @@unique([title, type])
}
